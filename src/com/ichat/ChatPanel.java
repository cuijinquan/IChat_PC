/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ichat;

import com.ichat.utils.DateUtils;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jivesoftware.smack.Chat;
import org.jivesoftware.smack.ChatManager;
import org.jivesoftware.smack.MessageListener;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smack.packet.Message;
import org.jivesoftware.smackx.filetransfer.FileTransfer.Status;
import org.jivesoftware.smackx.filetransfer.FileTransferListener;
import org.jivesoftware.smackx.filetransfer.FileTransferManager;
import org.jivesoftware.smackx.filetransfer.FileTransferRequest;
import org.jivesoftware.smackx.filetransfer.IncomingFileTransfer;
import org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer;

/**
 *
 * @author zhangjie
 */
public class ChatPanel extends javax.swing.JPanel {

public void setChatPanel(XMPPConnection conn, String frindsXmppAddress){
    this.conn = conn;
    this.frindsXmppAddress = frindsXmppAddress;
    CreateChatM();
    dateUtils = new DateUtils();
    chatName.setText(frindsXmppAddress);
    initTransFile();
}
    /**
     * Creates new form ChatPanel
     */
    public ChatPanel() {
        initComponents();
    }
    private void CreateChatM(){
        if(conn != null){
            chatManager = conn.getChatManager();
            chat = chatManager.createChat(frindsXmppAddress, 
                    new MessageListener(){
                @Override
                public void processMessage(Chat chat, Message msg) {
                    if(msg != null){
                        ChatMessage.append(dateUtils.getHM()+"  "+frindsXmppAddress+": "+msg.getBody()+"\n");
                    }
                }
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chatName = new javax.swing.JLabel();
        ChatFileTrans = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ChatMessage = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ChatContent = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        SendChatBtn = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ichat/images/login_icon.png"))); // NOI18N

        chatName.setText("jLabel2");

        ChatFileTrans.setText("文件传输");
        ChatFileTrans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChatFileTransMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ChatFileTrans)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chatName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chatName)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ChatFileTrans)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        ChatMessage.setEditable(false);
        ChatMessage.setColumns(20);
        ChatMessage.setRows(5);
        jScrollPane1.setViewportView(ChatMessage);

        jScrollPane2.setViewportView(ChatContent);

        jButton1.setText("关闭");

        SendChatBtn.setText("发送");
        SendChatBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SendChatBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(355, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(22, 22, 22)
                .addComponent(SendChatBtn)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(SendChatBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SendChatBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendChatBtnMouseClicked
        String Content = ChatContent.getText();
        try {
            chat.sendMessage(Content);
             ChatMessage.append(dateUtils.getHM()+"  自己: "+Content+"\n");
             ChatContent.setText("");
        } catch (XMPPException ex) {
            Logger.getLogger(ChatPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SendChatBtnMouseClicked

    private void ChatFileTransMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChatFileTransMouseClicked
        int result = 0;
       JFileChooser fileChooser = new JFileChooser();
       File file = null;
       fileChooser.setApproveButtonText("确定");
       fileChooser.setDialogTitle("选择文件");
       result = fileChooser.showOpenDialog(IChat.iChat);
       if(result == JFileChooser.APPROVE_OPTION){
           file = fileChooser.getSelectedFile();
           seletFilePath = fileChooser.getSelectedFile().getName();
           sendFile(file, seletFilePath);
           System.out.println(seletFilePath);
       }else{
           seletFilePath = null;
       }
    }//GEN-LAST:event_ChatFileTransMouseClicked

   private void initTransFile(){
      fileManager = new FileTransferManager(conn);
      fileManager.addFileTransferListener(new FileTransferListener(){
          @Override
          public void fileTransferRequest(FileTransferRequest request) {
              int respone = JOptionPane.showConfirmDialog(null, frindsXmppAddress+"发送文件"+request.getFileName(), "发送文件", JOptionPane.YES_NO_OPTION);
             if(respone == 0){
                  try {
                      // Accept it
                     IncomingFileTransfer transfer = request.accept();
                     transfer.recieveFile(new File(request.getFileName()));
                     while(!transfer.isDone()){
                        if(transfer.getStatus().equals(Status.error)){
                            System.out.println("ERROR!!! " + transfer.getError());
                        }else{
                             System.out.println(transfer.getStatus()+"进度 "+transfer.getProgress());
                        }
                         Thread.sleep(1000); 
                    }
                  } catch (Exception ex) {
                      Logger.getLogger(ChatPanel.class.getName()).log(Level.SEVERE, null, ex);
                  }finally{
                    if(transfer.getStatus().equals(Status.error)){
                        ChatMessage.append(dateUtils.getHM()+"  自己: 接收出错"+"\n");
                    }else if(transfer.getStatus().equals(Status.complete)){
                         ChatMessage.append(dateUtils.getHM()+"  自己: "+request.getFileName()+" 接收完成\n");
                    }else if(transfer.getStatus().equals(Status.cancelled)){
                         ChatMessage.append(dateUtils.getHM()+" 自己  "+request.getFileName()+" 接收取消\n");
                    }
                }
             }else{
                 request.reject();
             }
          }
      });
   }
   private void sendFile(File file, String fileName){
        try {
            if(JUID == null)
                 JUID =  conn.getRoster().getEntry(frindsXmppAddress).getUser();
            transfer = fileManager.createOutgoingFileTransfer(frindsXmppAddress+"/Spark 2.6.3");
            transfer.sendFile(file, fileName);
            while(!transfer.isDone()){
                if(transfer.getStatus().equals(Status.error)){
                    System.out.println("ERROR!!! " + transfer.getError());
                }else{
                     System.out.println(transfer.getStatus()+"进度 "+transfer.getProgress());
                }
                 Thread.sleep(1000); 
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }finally{
            if(transfer.getStatus().equals(Status.error)){
                ChatMessage.append(dateUtils.getHM()+"  自己: 传输出错"+"\n");
            }else if(transfer.getStatus().equals(Status.complete)){
                 ChatMessage.append(dateUtils.getHM()+"  自己: "+fileName+" 传输完成\n");
            }else if(transfer.getStatus().equals(Status.cancelled)){
                 ChatMessage.append(dateUtils.getHM()+frindsXmppAddress+"  "+fileName+" 传输取消\n");
            }
        }
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane ChatContent;
    private javax.swing.JButton ChatFileTrans;
    private javax.swing.JTextArea ChatMessage;
    private javax.swing.JButton SendChatBtn;
    private javax.swing.JLabel chatName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
 private XMPPConnection conn;
 private String frindsXmppAddress;
 private ChatManager chatManager;
 private Chat chat;
 private DateUtils dateUtils; 
 private String seletFilePath;
 private FileTransferManager fileManager;
 private OutgoingFileTransfer transfer;
 private String JUID = null;
}
